spring.application.name=signalement
server.port=8083
spring.docker.compose.enabled=true

# Change en INFO ou WARN si tu veux moins de details
logging.level.org.springframework.ws=DEBUG
logging.level.org.springframework = WARN
logging.level.com.signalement = INFO
logging.pattern.console="%d{yyyy-MM-dd HH:mm:ss} - %msg%n"


# Configuration de la source de donnees
spring.datasource.url=jdbc:postgresql://localhost:5432/signalement
spring.datasource.username=ndiankou
spring.datasource.password=Ndiankou_2000
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update


# Configuration JWT
jwt.secret=bW9uU3VwZXJTZWNyZXRLZXlQb3VySkdUIVNlY3VyZUtleTEyMzQ1Njc4OTAxMjM0NTY
jwt.expiration=900000
# Access token: 15 minutes (900000 ms)
jwt.refresh.expiration=604800000
# Refresh token: 7 jours (604800000 ms)


# CORS (si necessaire pour un frontend)
spring.web.cors.allowed-origins=http://localhost:3000,http://localhost:4200
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true


#Configuration de prometheus et grafana
management.endpoints.web.exposure.include=health,metrics,prometheus
management.endpoint.prometheus.access=unrestricted
management.prometheus.metrics.export.enabled=true
management.endpoint.health.show-details=always


#configuration Redis dans
spring.cache.type=redis
spring.data.redis.host = redis
spring.data.redis.port=6379


# configuration MinIO
minio.url=http://localhoat:9000
minio.access-key=minio
minio.secret-key=minio123
minio.bucket=signalement

#Configuration de rabbitmq
spring.rabbitmq.host=rabbitmq
spring.rabbitmq.port=5672
spring.rabbitmq.username=
spring.rabbitmq.password=guest 


